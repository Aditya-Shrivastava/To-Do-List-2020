[{"D:\\CS\\To-Do-List-2020\\src\\index.js":"1","D:\\CS\\To-Do-List-2020\\src\\reportWebVitals.js":"2","D:\\CS\\To-Do-List-2020\\src\\App.js":"3","D:\\CS\\To-Do-List-2020\\src\\components\\StateProvider.js":"4","D:\\CS\\To-Do-List-2020\\src\\components\\reducer.js":"5","D:\\CS\\To-Do-List-2020\\src\\components\\Home.js":"6","D:\\CS\\To-Do-List-2020\\src\\components\\Categories.js":"7","D:\\CS\\To-Do-List-2020\\src\\components\\Reminder.js":"8","D:\\CS\\To-Do-List-2020\\src\\components\\Navbar.js":"9","D:\\CS\\To-Do-List-2020\\src\\components\\SignIn.js":"10","D:\\CS\\To-Do-List-2020\\src\\components\\ExistingCategory.js":"11","D:\\CS\\To-Do-List-2020\\src\\components\\HomeSvg.js":"12","D:\\CS\\To-Do-List-2020\\src\\components\\AddCategory.js":"13","D:\\CS\\To-Do-List-2020\\src\\components\\ReminderCard.js":"14","D:\\CS\\To-Do-List-2020\\src\\components\\ReminderSvg.js":"15","D:\\CS\\To-Do-List-2020\\src\\Firebase.js":"16","D:\\CS\\To-Do-List-2020\\src\\config.js":"17","D:\\CS\\To-Do-List-2020\\src\\components\\encrypt.js":"18","D:\\CS\\To-Do-List-2020\\src\\components\\Card.js":"19"},{"size":764,"mtime":1607840949336,"results":"20","hashOfConfig":"21"},{"size":375,"mtime":1607780284241,"results":"22","hashOfConfig":"21"},{"size":997,"mtime":1607956211500,"results":"23","hashOfConfig":"21"},{"size":378,"mtime":1607780284160,"results":"24","hashOfConfig":"21"},{"size":1359,"mtime":1608041867366,"results":"25","hashOfConfig":"21"},{"size":1608,"mtime":1608236379559,"results":"26","hashOfConfig":"21"},{"size":1592,"mtime":1608234676387,"results":"27","hashOfConfig":"21"},{"size":11481,"mtime":1608234447041,"results":"28","hashOfConfig":"21"},{"size":3113,"mtime":1608039804410,"results":"29","hashOfConfig":"21"},{"size":12589,"mtime":1608216159720,"results":"30","hashOfConfig":"21"},{"size":909,"mtime":1608193814856,"results":"31","hashOfConfig":"21"},{"size":18146,"mtime":1607953485792,"results":"32","hashOfConfig":"21"},{"size":3460,"mtime":1608228877497,"results":"33","hashOfConfig":"21"},{"size":1998,"mtime":1608231554943,"results":"34","hashOfConfig":"21"},{"size":22827,"mtime":1607956165911,"results":"35","hashOfConfig":"21"},{"size":213,"mtime":1607781282726,"results":"36","hashOfConfig":"21"},{"size":373,"mtime":1607781267120,"results":"37","hashOfConfig":"21"},{"size":128,"mtime":1608216033141,"results":"38","hashOfConfig":"21"},{"size":331,"mtime":1608235106171,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1pplghk",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\CS\\To-Do-List-2020\\src\\index.js",[],["81","82"],"D:\\CS\\To-Do-List-2020\\src\\reportWebVitals.js",[],"D:\\CS\\To-Do-List-2020\\src\\App.js",[],"D:\\CS\\To-Do-List-2020\\src\\components\\StateProvider.js",[],"D:\\CS\\To-Do-List-2020\\src\\components\\reducer.js",[],"D:\\CS\\To-Do-List-2020\\src\\components\\Home.js",[],"D:\\CS\\To-Do-List-2020\\src\\components\\Categories.js",[],"D:\\CS\\To-Do-List-2020\\src\\components\\Reminder.js",["83"],"import React, { useEffect, useState } from 'react';\r\nimport './Reminder.css';\r\nimport { Firebase } from '../Firebase';\r\n\r\nimport { useStateValue } from './StateProvider';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport KeyboardReturnIcon from '@material-ui/icons/KeyboardReturn';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport {\r\n\tDialogContent,\r\n\tDialogTitle,\r\n\tTextField,\r\n\tTooltip,\r\n} from '@material-ui/core';\r\n\r\nimport ReminderCard from './ReminderCard';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport ReminderSvg from './ReminderSvg';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttextField: {\r\n\t\tmarginBottom: '20px',\r\n\t\t//   display: 'grid',\r\n\t\t//   placeItems: 'center'\r\n\t},\r\n}));\r\n\r\nfunction Reminder() {\r\n\tconst history = useHistory();\r\n\tconst user = localStorage.getItem('ID');\r\n\tconst db = Firebase.firestore();\r\n\tconst classes = useStyles();\r\n\r\n\tconst [\r\n\t\t{ activeCategory, reminders, categories, editId, editTitle, editText },\r\n\t\tdispatch,\r\n\t] = useStateValue();\r\n\r\n\tconst [dialogOpen, setDialogOpen] = useState(false);\r\n\tconst [activeReminders, setActiveReminders] = useState([]);\r\n\tconst [title, setTitle] = useState('');\r\n\tconst [description, setDescription] = useState('');\r\n\tconst [date, setDate] = useState('');\r\n\tconst [time, setTime] = useState('');\r\n\tconst [error, setError] = useState(false);\r\n\r\n\tconst filterReminders = () => {\r\n\t\tif (reminders !== undefined) {\r\n\t\t\tvar items = reminders.filter(function (reminder) {\r\n\t\t\t\treturn reminder.cid === activeCategory.cid;\r\n\t\t\t});\r\n\r\n\t\t\tsetActiveReminders(items);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst token = localStorage.getItem('TOKEN');\r\n\t\tif (token === null) {\r\n\t\t\thistory.push('/login');\r\n\t\t}\r\n\r\n\t\tdb.collection('reminders')\r\n\t\t\t.where('cid', '==', activeCategory.cid)\r\n\t\t\t.get()\r\n\t\t\t.then((data) => {\r\n\t\t\t\tlet newReminders = [];\r\n\t\t\t\tdata.docs.forEach((doc) => {\r\n\t\t\t\t\tlet reminder = {\r\n\t\t\t\t\t\ttitle: doc.data()['title'],\r\n\t\t\t\t\t\tcid: doc.data()['cid'],\r\n\t\t\t\t\t\tid: doc.id,\r\n\t\t\t\t\t\ttext: doc.data()['text'],\r\n\t\t\t\t\t\tdate: doc.data()['date'],\r\n\t\t\t\t\t\ttime: doc.data()['time'],\r\n\t\t\t\t\t\tuid: doc.data()['uid'],\r\n\t\t\t\t\t\tcategory: doc.data()['category'],\r\n\t\t\t\t\t};\r\n\t\t\t\t\tnewReminders.push(reminder);\r\n\t\t\t\t});\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: 'UPDATE_REMINDERS',\r\n\t\t\t\t\tpayload: newReminders,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t}, [dispatch, history, activeCategory, db]);\r\n\r\n\tuseEffect(() => {\r\n\t\tfilterReminders();\r\n\t}, [reminders]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetTitle(editTitle);\r\n\t\tsetDescription(editText);\r\n\t}, [editId, editText, editTitle]);\r\n\r\n\t// console.log(activeReminders);\r\n\r\n\t// console.log(reminders);\r\n\r\n\tconst handleDialogOpen = () => {\r\n\t\tsetDialogOpen(true);\r\n\t};\r\n\r\n\tconst handleDialogClose = () => {\r\n\t\tif (editId !== 0) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'EDIT_REMINDER',\r\n\t\t\t\tpayload: { id: 0, title: '', text: '' },\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsetDialogOpen(false);\r\n\t};\r\n\r\n\t// Date format reminder match\r\n\t// console.log(new Date().toLocaleString())\r\n\r\n\tconst handleDateTime = (e) => {\r\n\t\tsetError(false);\r\n\r\n\t\tconst item = e.target.value;\r\n\r\n\t\t// 2020-12-12T17:08\r\n\t\t// console.log(item.slice(0, 10));\r\n\t\t// console.log(item.slice(11, 16));\r\n\r\n\t\tsetDate(item.slice(0, 10));\r\n\t\tsetTime(item.slice(11, 16));\r\n\t};\r\n\r\n\t// console.log(Math.floor(Math.random() * 10000) + Math.floor(Math.random() * 1000));\r\n\r\n\tconst handleReminderSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\t\t// Also use this for edit -> delete current card then add a new card\r\n\r\n\t\tvar reminderData = {\r\n\t\t\tcid: activeCategory.cid,\r\n\t\t\ttitle: title,\r\n\t\t\ttext: description,\r\n\t\t\ttime: time,\r\n\t\t\tdate: date,\r\n\t\t\tuid: user,\r\n\t\t\tcategory: activeCategory.title,\r\n\t\t};\r\n\r\n\t\t// console.log(\"Add Reminder >>>\", tempState);\r\n\r\n\t\tif (title.length === 0 || date.length === 0 || time.length === 0) {\r\n\t\t\tsetError(true);\r\n\t\t} else {\r\n\t\t\t// EDIT  REMINDER\r\n\t\t\t// console.log(editId);\r\n\r\n\t\t\tif (editId !== 0) {\r\n\t\t\t\tvar updatedReminders = reminders.filter(function (reminder) {\r\n\t\t\t\t\treturn reminder.id !== editId;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tawait db.doc(`/reminders/${editId}`).delete();\r\n\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: 'UPDATE_REMINDERS',\r\n\t\t\t\t\tpayload: updatedReminders,\r\n\t\t\t\t});\r\n\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: 'EDIT_REMINDER',\r\n\t\t\t\t\tpayload: { id: 0, title: '', text: '' },\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tawait db\r\n\t\t\t\t.collection('reminders')\r\n\t\t\t\t.add(reminderData)\r\n\t\t\t\t.then((doc) => {\r\n\t\t\t\t\treminderData.id = doc.id;\r\n\t\t\t\t});\r\n\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'ADD_REMINDER',\r\n\t\t\t\tpayload: reminderData,\r\n\t\t\t});\r\n\r\n\t\t\tsetTitle('');\r\n\t\t\tsetDescription('');\r\n\t\t\tsetDate('');\r\n\t\t\tsetTime('');\r\n\t\t\tsetDialogOpen(false);\r\n\t\t}\r\n\t};\r\n\r\n\t// console.log(\"Dialog Open >>>>\", dialogOpen);\r\n\r\n\tconst [openDeleteDialog, setOpenDeleteDialog] = useState(false);\r\n\r\n\tconst handleDeleteCategory = () => {\r\n\t\tdb.doc(`/categories/${activeCategory.cid}`)\r\n\t\t\t.get()\r\n\t\t\t.then((doc) => {\r\n\t\t\t\tif (doc.exists) {\r\n\t\t\t\t\tconst uid = doc.data()['uid'];\r\n\t\t\t\t\tif (uid !== user) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdb.doc(`/categories/${activeCategory.cid}`)\r\n\t\t\t\t\t\t\t.delete()\r\n\t\t\t\t\t\t\t.then((_) => {\r\n\t\t\t\t\t\t\t\tdb.collection('reminders')\r\n\t\t\t\t\t\t\t\t\t.where('cid', '==', activeCategory.cid)\r\n\t\t\t\t\t\t\t\t\t.get()\r\n\t\t\t\t\t\t\t\t\t.then((data) => {\r\n\t\t\t\t\t\t\t\t\t\tvar batch = db.batch();\r\n\r\n\t\t\t\t\t\t\t\t\t\tdata.forEach((doc) => {\r\n\t\t\t\t\t\t\t\t\t\t\tbatch.delete(doc.ref);\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\t\tbatch.commit();\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tvar updatedReminders = reminders.filter(\r\n\t\t\t\t\t\t\t\t\tfunction (reminder) {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\treminder.cid !== activeCategory.cid\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\tvar updatedCategories = categories.filter(\r\n\t\t\t\t\t\t\t\t\tfunction (category) {\r\n\t\t\t\t\t\t\t\t\t\treturn category !== activeCategory;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\t\t\ttype: 'UPDATE_REMINDERS',\r\n\t\t\t\t\t\t\t\t\tpayload: updatedReminders,\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\t\t\ttype: 'UPDATE_CATEGORIES',\r\n\t\t\t\t\t\t\t\t\tpayload: updatedCategories,\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\t\t\t\ttype: 'ACTIVE_CATEGORY',\r\n\t\t\t\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\t\t\t\ttitle: '',\r\n\t\t\t\t\t\t\t\t\t\tcid: '',\r\n\t\t\t\t\t\t\t\t\t\tuid: '',\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\tlocalStorage.removeItem('ACTIVE_CATEGORY_ID');\r\n\t\t\t\t\t\t\t\tsetOpenDeleteDialog(false);\r\n\t\t\t\t\t\t\t\thistory.push('/categories');\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='reminder'>\r\n\t\t\t{activeCategory.cid !== '' ? (\r\n\t\t\t\t<div className='reminder__container'>\r\n\t\t\t\t\t<h1>Your Reminders for {activeCategory.title}</h1>\r\n\r\n\t\t\t\t\t<div className='reminder__add' onClick={handleDialogOpen}>\r\n\t\t\t\t\t\t<AddCircleIcon className='reminder__addIcon' />\r\n\r\n\t\t\t\t\t\t<p className='reminder__addText'>Add new reminder</p>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<Dialog\r\n\t\t\t\t\t\topen={dialogOpen}\r\n\t\t\t\t\t\tonClose={handleDialogClose}\r\n\t\t\t\t\t\taria-labelledby='form-dialog-title'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div className='reminder__dialog'>\r\n\t\t\t\t\t\t\t<DialogTitle id='form-dialog-title'>\r\n\t\t\t\t\t\t\t\tAdd a Reminder\r\n\t\t\t\t\t\t\t</DialogTitle>\r\n\t\t\t\t\t\t\t<DialogContent>\r\n\t\t\t\t\t\t\t\t<form onSubmit={handleReminderSubmit}>\r\n\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\terror\r\n\t\t\t\t\t\t\t\t\t\t\t\t? title.length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? false\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: true\r\n\t\t\t\t\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\t\t\terror\r\n\t\t\t\t\t\t\t\t\t\t\t\t? title.length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? null\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 'please add a title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\t\t\tmargin='dense'\r\n\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\t\t\tvalue={title}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetTitle(e.target.value);\r\n\t\t\t\t\t\t\t\t\t\t\tsetError(false);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\t\t\tmargin='dense'\r\n\t\t\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\t\t\tvalue={description}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\t\tsetDescription(e.target.value)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\terror\r\n\t\t\t\t\t\t\t\t\t\t\t\t? date.length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? false\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: true\r\n\t\t\t\t\t\t\t\t\t\t\t\t: false\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\thelperText={\r\n\t\t\t\t\t\t\t\t\t\t\terror\r\n\t\t\t\t\t\t\t\t\t\t\t\t? date.length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? null\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 'please select date and time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tid='datetime-local'\r\n\t\t\t\t\t\t\t\t\t\tlabel='Set Date and Time'\r\n\t\t\t\t\t\t\t\t\t\ttype='datetime-local'\r\n\t\t\t\t\t\t\t\t\t\t// defaultValue='2020-01-01T00:00'\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\t\t\t\t\t\tshrink: true,\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleDateTime}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='reminder__dialogButtons'>\r\n\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: '#fe5f55',\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleDialogClose}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tclose\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: '#17b978',\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleReminderSubmit}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tadd\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t</DialogContent>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Dialog>\r\n\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={`${\r\n\t\t\t\t\t\t\tactiveReminders?.length === 0 && 'reminder__noCards'\r\n\t\t\t\t\t\t} ${'reminder__cards'}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{activeReminders?.map((reminder, index) => (\r\n\t\t\t\t\t\t\t<ReminderCard\r\n\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\tid={reminder.id}\r\n\t\t\t\t\t\t\t\ttitle={reminder.title}\r\n\t\t\t\t\t\t\t\ttext={reminder.text}\r\n\t\t\t\t\t\t\t\ttime={reminder.time}\r\n\t\t\t\t\t\t\t\tdate={reminder.date}\r\n\t\t\t\t\t\t\t\tcid={reminder.category}\r\n\t\t\t\t\t\t\t\topenDialog={handleDialogOpen}\r\n\t\t\t\t\t\t\t\t// pass delete\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='reminder__buttons'>\r\n\t\t\t\t\t\t<Tooltip title='Go To Categories' placement='right-end'>\r\n\t\t\t\t\t\t\t<KeyboardReturnIcon\r\n\t\t\t\t\t\t\t\tstyle={{ color: '#3a3d44' }}\r\n\t\t\t\t\t\t\t\tclassName='reminder__buttons--hover'\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tlocalStorage.removeItem(\r\n\t\t\t\t\t\t\t\t\t\t'ACTIVE_CATEGORY_ID'\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\thistory.push('/categories');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\ttitle='Delete This Category'\r\n\t\t\t\t\t\t\tplacement='left-end'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<DeleteIcon\r\n\t\t\t\t\t\t\t\tstyle={{ color: '#3a3d44' }}\r\n\t\t\t\t\t\t\t\tclassName='reminder__buttons--hover'\r\n\t\t\t\t\t\t\t\tonClick={() => setOpenDeleteDialog(true)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t<Dialog\r\n\t\t\t\t\t\t\topen={openDeleteDialog}\r\n\t\t\t\t\t\t\tonClose={() => setOpenDeleteDialog(false)}\r\n\t\t\t\t\t\t\taria-labelledby='alert-dialog-title'\r\n\t\t\t\t\t\t\taria-describedby='alert-dialog-description'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div className='reminder__dialog'>\r\n\t\t\t\t\t\t\t\t<DialogTitle id='alert-dialog-title'>{`Delete category ${activeCategory.title} ?`}</DialogTitle>\r\n\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-evenly',\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tclassName='reminder__dialogButtons'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: '#fe5f55',\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\tsetOpenDeleteDialog(false)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tNo\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: '#17b978',\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tonClick={handleDeleteCategory}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tYes\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Dialog>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<ReminderSvg />\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default Reminder;\r\n","D:\\CS\\To-Do-List-2020\\src\\components\\Navbar.js",[],"D:\\CS\\To-Do-List-2020\\src\\components\\SignIn.js",[],"D:\\CS\\To-Do-List-2020\\src\\components\\ExistingCategory.js",["84"],"import React from 'react';\r\nimport './ExistingCategory.css';\r\n\r\nimport CategoryIcon from '@material-ui/icons/Category';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction ExistingCategory({ name, cid, uid }) {\r\n\tconst category = {\r\n\t\ttitle: String(name),\r\n\t\tcid: String(cid),\r\n\t\tuid: String(uid),\r\n\t};\r\n\r\n\tconst [{}, dispatch] = useStateValue();\r\n\r\n\tconst history = useHistory();\r\n\r\n\tconst handleClick = () => {\r\n\t\tlocalStorage.setItem('ACTIVE_CATEGORY_ID', cid);\r\n\t\tdispatch({\r\n\t\t\ttype: 'ACTIVE_CATEGORY',\r\n\t\t\tpayload: category,\r\n\t\t});\r\n\r\n\t\thistory.push('/reminder');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='exCategory' onClick={handleClick}>\r\n\t\t\t<div className='exCategory__items'>\r\n\t\t\t\t<div className='exCategory__itemsIcon'>\r\n\t\t\t\t\t<CategoryIcon />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<p>{name}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ExistingCategory;\r\n","D:\\CS\\To-Do-List-2020\\src\\components\\HomeSvg.js",[],"D:\\CS\\To-Do-List-2020\\src\\components\\AddCategory.js",[],"D:\\CS\\To-Do-List-2020\\src\\components\\ReminderCard.js",[],"D:\\CS\\To-Do-List-2020\\src\\components\\ReminderSvg.js",[],"D:\\CS\\To-Do-List-2020\\src\\Firebase.js",[],"D:\\CS\\To-Do-List-2020\\src\\config.js",[],"D:\\CS\\To-Do-List-2020\\src\\components\\encrypt.js",[],"D:\\CS\\To-Do-List-2020\\src\\components\\Card.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":94,"column":5,"nodeType":"91","endLine":94,"endColumn":16,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":16,"column":9,"nodeType":"95","messageId":"96","endLine":16,"endColumn":11},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filterReminders'. Either include it or remove the dependency array.","ArrayExpression",["99"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},"Update the dependencies array to be: [filterReminders, reminders]",{"range":"102","text":"103"},[2517,2528],"[filterReminders, reminders]"]